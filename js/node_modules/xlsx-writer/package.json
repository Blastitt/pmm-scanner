{
  "name": "xlsx-writer",
  "description": "Simple XLSX writer.",
  "version": "0.0.10",
  "homepage": "https://github.com/rubenv/node-xlsx-writer",
  "author": {
    "name": "Ruben Vermeersch",
    "email": "ruben@savanne.be",
    "url": "http://savanne.be/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rubenv/node-xlsx-writer.git"
  },
  "bugs": {
    "url": "https://github.com/rubenv/node-xlsx-writer/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rubenv/node-xlsx-writer/blob/master/LICENSE"
    }
  ],
  "main": "lib/index.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-watch": "~0.3.1",
    "grunt-contrib-coffee": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt": "~0.4.0",
    "grunt-mocha-cli": "~1.0.1",
    "coffee-script": "~1.6.1",
    "grunt-mkdir": "~0.1.0",
    "excel": "0.0.3",
    "underscore": "~1.4.4",
    "grunt-release": "~0.3.1"
  },
  "keywords": [
    "xlsx",
    "excel",
    "spreadsheet"
  ],
  "dependencies": {
    "temp": "~0.5.0",
    "async": "~0.2.6",
    "zipper": "~0.3.0"
  },
  "readme": "# XLSX writer\n\n  Simple XLSX writer. Reverse-engineered from sample XLSX files.\n  \n  [![Build Status](https://travis-ci.org/rubenv/node-xlsx-writer.png?branch=master)](https://travis-ci.org/rubenv/node-xlsx-writer)\n\n## Dependency\n  xlsx-writer is dependent libzip-devel (Fedora etc.) or libzip-dev (Ubuntu etc.).\n  If you got any error when you try npm install, try the following:\n\n```bash\n# Ubuntu/Debian:\napt-get install libzip-dev\n\n# Fedora/CentOS/RHEL:\nyum install libzip-devel\n```\n\n\n## Usage\n  \n  You can install the latest version via npm:\n  \n    $ npm install --save xlsx-writer\n\n  Require the module:\n\n    var xlsx = require('xlsx-writer');\n\n  Write a spreadsheet:\n\n    var data = [\n        {\n            \"Name\": \"Bob\",\n            \"Location\": \"Sweden\"\n        },\n        {\n            \"Name\": \"Alice\",\n            \"Location\": \"France\"\n        }\n    ];\n\n    xlsx.write('mySpreadsheet.xlsx', data, function (err) {\n        // Error handling here\n    });\n\n  This will write a spreadsheet like this:\n\n    Name    | Location\n    --------+---------\n    Bob     | Sweden\n    Alice   | France\n\n  In other words: The key names are used for the first row (headers),\n  The values are used for the columns. All field names should be present\n  in the first row.\n\n## Advanced usage\n\n  You can also use the full API manually. This allows you to build the\n  spreadsheet incrementally:\n\n    var XlsxWriter = require('xlsx-writer');\n\n    var writer = new XlsxWriter('mySpreadsheet.xlsx');\n\n    // Pass the number of rows and columns:\n    writer.prepare(2, 2, function (err) {\n        if (err) {\n            throw err;\n        }\n\n        // Add some rows\n        writer.addRow({\n            \"Name\": \"Bob\",\n            \"Location\": \"Sweden\"\n        });\n        writer.addRow({\n            \"Name\": \"Alice\",\n            \"Location\": \"France\"\n        });\n\n        // Finalize the spreadsheet\n        writer.pack(function (err) {\n            if (err) {\n                console.log('Something went wrong!');\n            } else {\n                console.log('All done!');\n            }\n        });\n    });\n\n## Contributing\n\n  In lieu of a formal styleguide, take care to maintain the existing coding\n  style. Add unit tests for any new or changed functionality.\n\n  All source-code is written in CoffeeScript and is located in the `src`\n  folder. Do not edit the generated files in `lib`, they will get overwritten\n  (and aren't included in git anyway).\n\n  You can build and test your code using [Grunt](http://gruntjs.com/). The\n  default task will clean the source, compiled it and run the tests.\n\n## License \n\n    (The MIT License)\n\n    Copyright (C) 2013 by Ruben Vermeersch <ruben@savanne.be>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "xlsx-writer@0.0.10",
  "_from": "xlsx-writer@*"
}
